$disable-sidebar-background: 908;

lori-sidebar-wrapper {
    // Hidden Toggle for the * CHECKBOX HACK *
    #sidebar-navbar-toggle {
        display: none;
    }

    display: flex;

    // Improved Text Stuff
    color: var(--text);
    font-size: 16px;
    line-height: 24px;

    nav.left-sidebar {
        background: linear-gradient(-90deg, var(--background-wrapper-secondary) 55%, #43b1ff00), url("../img/website_bg.png");

        // Start fading out the sidebar background if the screen size is too small, helps with text since you don't have a background overlapping
        $i: 1366;
        $percentage-index: 55;

        @while $i > $disable-sidebar-background {
            @media screen and (max-width: #{$i}px) {
                background: linear-gradient(-90deg, var(--background-wrapper-secondary) #{$percentage-index}#{'%'}, #43b1ff00), url("../img/website_bg.png");
            }
            $percentage-index: $percentage-index + 5;
            $i: $i - 50;
        }

        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        display: flex;
        overflow: auto;
        justify-content: flex-end;
        flex: 1 1 40%;
        transition: 0.5s;
        // The left sidebar needs to have a bigger index than right-sidebar, if not the shadow will not show up
        z-index: 1;
        // Remember that every parent can't have overflow: hidden or similar! If they have, the sticky prop breaks!
        position: sticky;

        // Makes the scrollbar match the theme, because the blue scrollbar is kinda ugly here
        scrollbar-width: thin;
        scrollbar-color: initial;

        // This allows the element to stick
        top: 46px; // Navbar
        left: 0;
        bottom: 0;
        // This adds a scrollbar if the sidebar is too big
        height: calc(100vh - 46px);

        .contents {
            // Only for phone so we don't care that it isn't visible in PC
            #sidebar-navbar-control {
                display: none;

                // Change the label to a click cursor to make it look better
                label {
                    cursor: pointer;
                }
            }

            height: 100%;
            margin-right: 8px;
            // padding-top: 40px;
            width: 250px;

            .header {
                color: #6a7480;
                padding: 6px 10px;
                text-transform: uppercase;
                font-size: 0.75em;
                font-weight: 1000;
                line-height: 16px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            .entry {
                padding: 6px 10px;
                border-radius: 3px;
                margin-bottom: 2px;
                padding-bottom: 6px;
                padding-top: 6px;
                line-height: 20px;
                transition: 0.3s;
                cursor: pointer;
                max-width: 280px;
                color: var(--text);
                text-decoration: none;
                display: block;
                // color: #4f5660;

                &:hover {
                    background-color: #0000000a;
                    text-decoration: none;
                }

                &.selected {
                    background-color: $primary-color;
                    color: white;
                    font-weight: bold;
                }
            }
        }
    }
    
    section.right-sidebar {
        // padding-top: 40px;
        overflow: auto;
        display: flex;
        flex-basis: 100%;
        // background-color: white;
        background: var(--background-right-sidebar);

        .contents {
            // Percentage Padding allows the padding to decrease according to the screen size
            padding: 0px 5% 0px 5%;
            flex-grow: 1;
            width: 100%;
            max-width: 50em; // Avoids the text being difficult as fuc to read in larger screens
            // Center the text in the div
            margin-left: auto;
            margin-right: auto;

            img {
                max-width: 100%;
            }
        }
    }

    aside.sidebar-ad {
        width: 160px;
        min-width: 160px;
        max-width: 160px;
        // Debugging
        // background-color: red;
        background: var(--background-right-sidebar);

        position: sticky;
        top: 46px;
        right: 0;
        height: calc(100vh - 46px);
        
        display: flex;
        align-items: center;

        @media screen and (max-width: 900px) {
            display: none;
        }
    }
}

@media screen and (max-width: 800px) {
    // Design for Small Screens
    lori-sidebar-wrapper {
        // Makes the elements be in a column, so the left sidebar will be on top of the right sidebar
        flex-direction: column;

        .inner-sidebar-content {
            transition-duration: 0.3s;
            // Required to avoid the clicks not passing through due to the opacity: 0 (instead of display: none)
            pointer-events: none;
            opacity: 0;
            
            // A very pretty popup :3
            position: absolute;
            // We don't want the popup to show *on top* of the button, so we use top: 100% to place it *below* the button (yay!)
            top: 100%;
            background-color: white;
            border-radius: 10px;
            overflow: auto;
            height: 70vh;
            width: min(80vw, 460px);
            right: 0px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);

            // This is like ".entry", but doesn't has any style to it
            .side-content {
                // Because the entries are hidden, we need to unhide them inside of the details section
                display: block;
                width: 100% !important;
                max-width: 100% !important;
                // Needed, if else the max-width overflows for some reason
                box-sizing: border-box;
            }

            .entry {
                // Because the entries are hidden, we need to unhide them inside of the details section
                display: block;
                width: 100% !important;
                max-width: 100% !important;
                // Needed, if else the max-width overflows for some reason
                box-sizing: border-box;
            }

            .header {
                display: block;
            }
        }

        nav.left-sidebar {
            // Replace overflow with "visible", this allows the summary/details to overflow outside of the parent div
            // (Before we were using "initial" but looks like Apple doesn't like this)
            overflow: visible;

            // In Firefox, the original height works fine.
            // But in Chromium browsers, it breaks.
            // So let's use a fixed height...
            // (Before we were using "auto" but Apple/iOS sucks)
            min-height: 50px;
            max-height: 50px;
            height: 50px; // "We want EXACTLY this size, stop complaining iOS"

            // Allows the popup to show on top of the footer, good for smaller screens
            z-index: 100;

            // Keeps everything centralized vertically (looks pretty)
            display: flex;
            flex-basis: auto; // If this isn't present, the "height: 50px;" doesn't work

            .contents {
                #sidebar-navbar-control {
                    display: block;
                    margin-left: auto;
                    position: relative;
                }
                
                // Makes all entries be in a column
                display: flex;
                flex-direction: row;

                // We allocate 100% here to push the ads to the left side
                width: 100%;

                // Remove the gradient drawing background, keep solid color
                background: #ebebeb;

                align-items: center;

                details {
                    position: relative;
                }
            }
        }
    }

    #sidebar-navbar-toggle:checked ~ {
        .inner-sidebar-content {
            opacity: 1;
            pointer-events: initial;
        }
    }
}