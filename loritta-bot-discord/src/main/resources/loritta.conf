#   _                _ _   _
#  | |              (_) | | |
#  | |     ___  _ __ _| |_| |_ __ _
#  | |    / _ \|  __| | __| __/ _` |
#  | |___| (_) | |  | | |_| || (_| |
#  |______\___/|_|  |_|\__|\__\__,_|
#
# Welcome to Loritta's configuration file!
#
# The configuration file uses HOCON (Human-Optimized Config Object Notation)
# Read more at: https://github.com/lightbend/config/blob/master/HOCON.md
#
# If you are self-hosting Loritta, please contribute back to the open source community by making your changes open source!
# Loritta's license is AGPL-3.0, if you host Loritta with your changes and make it public, you are obliged to make your changes open.
# Read more at: https://github.com/LorittaBot/Loritta/blob/master/LICENSE
#
# Pull Requests are welcome, as long as it fits Loritta's original purpose!
#
# If you are self-hosting, please donate to cover the main bot server costs and to keep Loritta alive! ;w; https://loritta.website/donate
#
# Website: https://loritta.website/
# Twitter: @LorittaBot
# Instagram: @lorittabot
# MrPowerGamerBR's Website: https://mrpowergamerbr.com/
#
# I hope you have a nice day! Remember: Always do the right thing, make a world a better place. That's what Loritta wants in her life. :3
loritta {
    # The current environment (PRODUCTION, CANARY)
    environment = PRODUCTION

    # Bot owner ID, this grants permission to use... well, "owner" features (like +eval)
    ownerIds = [ 123170274651668480 ]

    # Read timeout when connecting to other Loritta Clusters
    clusterReadTimeout = 15000

    # Connection timeout when connecting to other Loritta Clusters
    clusterConnectionTimeout = 15000

    webhookSecret = "webhook secret (used for PubSub, Twitch, etc)"

    # Discord configuration
    discord {
        # The bot's token
        token = "bot token here"

        # The bot's application ID
        applicationId = 40028922

        # The bot's client secret
        clientSecret = "client secret here"

        # Discord's Base URL, used by JDA to know where should the request should go
        # Useful to use a proxy to sincronize global rate limits between Loritta instances!
        # Example: https://github.com/germanoeich/nirn-proxy
        baseUrl = null

        maxRequestsPerHost = 5

        # JDA OkHttp confiugration
        okHttp {
            readTimeout = 10
            connectTimeout = 10
            writeTimeout = 10
        }

        # Max Shards
        maxShards = 1

        # For bots that has the improved sharding system ("Sharding for very large bots")
        maxConcurrency = 1

        # Sets how many shards can login in parallel, can be maxConcurrency but this can be decreased to avoid the bot going out of memory when logging in
        # While shard gateway resumes are expensive, shard logins from scratch are WAY more expensive because if you end up not heartbeating during the process, you end up losing all the current shard progress
        # And you also need to read guild create events from the gateway... it ends up being very expensive
        maxParallelLogins = 1

        requestLimiter {
            # To avoid getting globally banned by Discord due to a lot of global rate limit hits (Discord outages causing a flood of events ;w;), you can use the request limiter.
            # Request Limiter automatically cancels all pending requests and stops processing new events for a while

            # If the request limiter is enabled
            enabled = false

            # How many global rate limit hits can be hit before Loritta starts ignoring requests
            maxRequestsPer10Minutes = 250

            # Cooldown between "Ignoring requests" messages in the console, in milliseconds
            consoleWarnCooldown = 2500

            # Cooldown between pending request cancellation, in milliseconds
            removePendingRequestsCooldown = 15000
        }
    }

    # Discord Interactions configuration
    interactions {
        # If all commands should be registered globally
        registerGlobally = false

        # If the commands aren't going to be registered globally, then add the guild IDs of the guilds that
        # the commands should be registered in here!
        #
        # (Useful for debugging)
        guildsToBeRegistered = [
            297732013006389252
        ]
    }

    clusters {
        # If enabled, Loritta will try getting the Cluster ID from the hostname by substring after the last "-"
        # Example: "loritta-cinnamon-production-1" = Replica ID: 1
        getClusterIdFromHostname = false

        # If the getReplicaIdFromHostname is false, you need to set replicaIdOverride to the cluster ID that you want Loritta to use
        replicaIdOverride = 1

        # Cluster instances
        instances = [
            {
                id = 1
                name = "LorittaMorenitta"
                # Discord Shard Information
                # If the "max-shards" value in discord.conf is "1":
                # min-shard = 0
                # max-shard = 0
                # Means that the cluster 1 will have one shard (shard 0)
                #
                # If the "max-shards" value in discord.conf is "4":
                # min-shard = 0
                # max-shard = 3
                # Means that the cluster 1 will have four shards (shard 0, 1, 2, 3)
                minShard = 0 # Minimum Discord shard ID
                maxShard = 0 # Maximum Discord shard ID

                websiteUrl = "https://loritta.website/"
                # Loritta's RPC URL, used for external apps to communicate with her
                # The RPC should NOT be exposed to the external world!
                rpcUrl = "http://127.0.0.1:13003/"
            }
        ]
    }

    folders {
        # The root folder
        root = "/home/loritta/assets"
        # Assets folder, where the images/fonts/etc are stored
        assets = ${loritta.folders.root}"assets/"
        # Temporary folder, used for temporary GIFs and etc
        temp = ${loritta.folders.root}"temp/"
        # Website
        website = ${loritta.folders.root}"frontend/"
    }

    commands {
        # Command cooldown in milliseconds
        cooldown = 2500
        # Command cooldown in milliseconds for commands that do send files (needsToUploadFiles = true)
        imageCooldown = 5000

        commandsCooldown = {
            # Overrides cooldown for specific commands
            # Example:
            # "PingCommand" = 15000
            # This would create a 15s cooldown when you use "+ping"
            "CommandClassName" = 7500
        }
    }

    website {
        # Website URL
        url = "https://loritta.website/"
        # Website Port
        port = 4568

        spicyMorenittaDashboardUrl = "https://dash.loritta.website/"

        # When you add a bot to a guild, it may take some seconds until Discord sends the create guild event to the bot
        # To avoid redirecting the user to a "whoops something went wrong!" screen, we try retrying until we are able
        # to get the newly added guild
        # Each retry has 1s of delay, so 10 retries = 10 seconds until Loritta gives up
        maxGuildTries = 10

        # Website API keys
        apiKeys = [
            {
                # This is a *required* key (Loritta Internal Key), this is the key that Loritta uses internally to talk to other clusters
                name = fancy_and_fluffy_password
                description = "Loritta Internal Key"
                allowed = [ "*" ]
            }
        ]

        # This is used to encrypt the user cookie to avoid users editing the session
        # Needs to be a 54 character long string
        sessionHex = "81157979ec9580427e55eb576b73865dfaa4dbce5be78187620c35"
        sessionName = "LORITTA_WEB_SESSION"
        sessionDomain = "127.0.0.1"

        # Overrides the Spicy Morenitta JS path
        # If not null, instead of loading the Spicy Morenitta from the JAR, it will be loaded from the provided path
        # Useful for development purposes
        spicyMorenittaJsPath = null
    }

    pudding {
        # Information about the PostgreSQL server that will be used to store data
        # The database name in the PostgreSQL server
        database = "cinnamon"

        # The address of the PostgreSQL server
        address = "127.0.0.1:5432"

        # The username of the PostgreSQL server
        username = "postgres"

        # The password of the PostgreSQL server
        password = "postgres"
    }

    # PerfectPayments (https://payments.perfectdreams.net/) is used for payments
    # You can keep it with dummy values if you don't need it
    perfectPayments {
        url = "https://payments.perfectdreams.net/"
        notificationToken = "WowPaymentNotificationTokenHere"
        token = "PerfectPaymentsTokenHereOwO"
    }

    binaries {
        ffmpeg = "/usr/bin/ffmpeg"
        gifsicle = "/usr/bin/gifsicle"
    }

    falatron {
        url = "https://falatron.com/api"
        key = "falatron api key here"
    }

    googleVision {
        key = "google vision api key here"
    }

    gabrielaImageServer {
        # Gabriela's Image Server is a image/video generation microservice

        # Gabriela's Image Server URL
        url = "https://gabriela.loritta.website/"
    }

    randomRoleplayPictures {
        # Random Roleplay Pictures is a roleplay pictures microservice

        # Random Roleplay Pictures URL
        url = "https://rpp-production.loritta.website/"
    }

    dreamStorageService {
        url = "https://files.perfectdreams.media"
        token = "dreamstorageservice token here"
    }

    etherealGambiService {
        url = "https://stuff.loritta.website/backgrounds/"
    }

    gabrielaHelperService {
        url = "http://gabriela-helper:13000/"
    }

    youtube {
        # Used for the "+youtube" commands and other random tidbits
        key = "youtube api key"
    }

    openWeatherMap {
        key = "openweathermap api key"
    }

    googleRecaptcha {
        serverVoteToken = "google recaptcha api key (for server votes)"
        reputationToken = "google recaptcha api key (for reputations)"
    }

    voteWebsites {
        topgg {
            clientId = 40028922
            token = "the client token"
        }

        discordBots {
            clientId = 40028922
            token = "the client token"
        }
    }

    turnstileCaptchas {
        dailyReward {
            siteKey = "cloudflare turnstile site key"
            secretKey = "cloudflare turnstile secret key"
        }
    }

    crowdin {
        url = "https://i18n.perfectdreams.net/"
    }

    twitter {
        oAuthConsumerKey = "twitter consumer key"
        oAuthConsumerSecret = "twitter consumer secret"
        oAuthAccessToken = "twitter access token"
        oAuthAccessTokenSecret = "twitter token secret"
    }

    twitch {
        clientId = "twitch client id"
        clientSecret = "twitch client secret"
        webhookUrl = "twitch webhook url"
        webhookSecret = "twitch webhook secret"
    }

    messageEncryption {
        # Used for Event Log, needs to be a 32 character length string
        encryptionKey = "LoriLovesEncryptionOwOLoveU*^-^*"
    }

    messageVerification {
        # Used for the message verification feature
        encryptionKey = "RandomEncryptionKeyHere"
    }

    messageRenderer {
        # Used for the message renderer feature
        rendererUrl = "http://127.0.0.1:8080/"
    }

    # Used for the "openSafeConnection" code
    connectionManager {
        # Domains on this list are "trusted" and are safe, so Loritta is able to connect to those domains
        trustedDomains = [
            "discord.gg"
            "discordapp.com"
            "discordapp.net"
            "imgur.com"
            "perfectdreams.net"
            "sparklypower.net"
            "loritta.website"
            "lori.fun"
            "loritta.land"
            "twitch.tv"
            "aminoapps.com"
            "youtube.com"
            "youtu.be"
            "ytimg.com"
            "soundcloud.com"
            "maxcdn.com"
            "fbcdn.net"
            "twimg.com"
            "narvii.com"
            "mrpowergamerbr.com"
            "reddit.com"
            "redditmedia.com"
            "google.com"
            "googlenews.com"
            "github.com"
            "tenor.com"
            "giphy.com"
            "gfycat.com"
            "twitter.com"
            "facebook.com"
            "minecraft.net"
            "roblox.com"
            "crafatar.com"
            "rbxcdn.com"
        ]
        # Domains that Loritta won't EVER connect to (Example: IP loggers to avoid script kiddies)
        # Even if all untrusted connections are proxied... better be safe than sorry
        blockedDomains = []
    }

    quirky {
        randomReactions {
            enabled = true
            maxBound = 500

            reactions = [
                "ata:339904769139146755",
                "gesso:523233744656662548",
                "a:revolving_think:417382964364836864",
                "lori_morre_diabo:540656812836519936",
                "a:lori_rage:541715482986938379",
                "lori_ok_hand:426183783008698391",
                "eu_te_moido:366047906689581085",
                "hyper_NOSA:450476856303419432",
                "a:lori_happy:521721811298156558",
                "a:ralseinite:508811387175436291"
            ]

            contextAwareReactions = [
                {
                    match = "(?i)kkkk(k+)"
                    chanceOf = 25
                    reactions = [ "lori_ok_hand:426183783008698391" ]
                }
                {
                    match = "(?i)creeper"
                    chanceOf = 75
                    reactions = [ "creeper:608722385817829428" ]
                }
                {
                    match = "(?i)'-'"
                    chanceOf = 75
                    reactions = [ "lori_otaku_face:638074008952111114" ]
                }
                {
                    match = "(?i)feliz|daora|massa|top"
                    chanceOf = 25
                    reactions = [ "a:lori_happy:521721811298156558", "lori_feliz:519546310978830355", "gesso:523233744656662548", "lori_yay:638039344392699934", "a:lori_yay_wobbly:638040459721310238", "a:lori_yay_super_wobbly:638041477431164978" ]
                }
                {
                    match = "(?i)triste|bad|bolado"
                    chanceOf = 25
                    reactions = [ "sad_cat:419474182758334465", "sad_cat2:585536245891858470", "sad_cat3:585536267530534913", "sad_cat6:585951728365600779", "sad_cat8:618591101263020052", "sad_cat4:585667678828494877", "sad_cat5:585938576907305004" ]
                }
            ]
        }

        tioDoPave {
            enabled = true
            chance = 0.1
        }

        canecaUsers = [
            561525046385049605,
            123170274651668480,
            273957582224228353,
            485837271967465472,
            328973123351216130,
            483723642027507712
        ]
    }

    donatorsOstentation {
        boostEnabledGuilds = [
            # Servidor BR da Loritta
            {
                id = 297732013006389252
                inviteId = "V7Kbh4z"
                priority = 1
            }
            # Servidor Internacional da Loritta
            {
                id = 420626099257475072
                inviteId = "ZWt5mKB"
                priority = 2
            }
            # SparklyPower
            {
                id = 320248230917046282
                inviteId = "JYN6g2s"
                priority = 3
            }
            # Projeto Futuro #1
            {
                id = 681477966286422149
                inviteId = "YZZG3gY"
                priority = 4
            }
            # Sad Cats
            {
                id = 769030809159073795
                inviteId = "ZHsVr23"
                priority = 5
            }
            # Chino
            {
                id = 468877023926943764
                inviteId = "CAm9cSU"
                priority = 6
            }
            # Wisenex
            {
                id = 260119800947277824
                inviteId = "etmzUaF44z"
                priority = 7
            }
            # Night Will Smith
            {
                id = 633470003026329610
                inviteId = "Vgq7YPH"
                priority = 8
            }
            # Rede Dark
            {
                id = 417061847489839106
                inviteId = "XFbvtue"
                priority = 9
            }
            # Padaria
            {
                id = 748917809995841666
                inviteId = "wfGUzMVedB"
                priority = 10
            }
            # Servidor do Jv
            {
                id = 846501464502698014
                inviteId = "8RjvkwTyyJ"
                priority = 11
            }
        ]

        boostMax = 25
        automaticallyUpdateMessage = true
        channelId = 663098645767258113
        messageId = 681474891870240769
    }
    antiRaidIds = []
}